skip_branch_with_pr: true

# build cache to preserve files/folders between builds
cache:
  - '%LocalAppData%\NuGet\v3-cache'

image: Visual Studio 2017
configuration: Release

install:
  - choco install gitversion.portable -pre -y
  # - choco install -y rabbitmq
  # - ps: |
  #     write-host "Discovering rabbitmq installation location"
  #     $regPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\RabbitMQ"
  #     if (Test-Path "HKLM:\SOFTWARE\Wow6432Node\") { $regPath = "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\RabbitMQ" }
  #     $path = Split-Path -Parent (Get-ItemProperty $regPath "UninstallString").UninstallString
  #     $version = (Get-ItemProperty $regPath "DisplayVersion").DisplayVersion
  #     [Environment]::SetEnvironmentVariable("RABBITMQ_HOME", "$path\rabbitmq_server-$version", "Machine")
  #     $env:RABBITMQ_HOME = "$path\rabbitmq_server-$version"
  #     [Environment]::SetEnvironmentVariable("RABBITMQ_RABBITMQCTL_PATH", "$path\rabbitmq_server-$version\sbin\rabbitmqctl.bat", "Machine")
      
  #     $env:RABBITMQ_RABBITMQCTL_PATH = "$path\rabbitmq_server-$version\sbin\rabbitmqctl.bat"
  #     $env:RABBITMQ_RABBITMQSERVER_PATH = "$path\rabbitmq_server-$version\sbin\rabbitmq-service.bat"

  #     write-host $env:RABBITMQ_RABBITMQCTL_PATH
  #     write-host $env:RABBITMQ_RABBITMQSERVER_PATH

  #     $uninstall = "cmd.exe /C '$env:RABBITMQ_RABBITMQSERVER_PATH' remove"
  #     $install = "cmd.exe /C '$env:RABBITMQ_RABBITMQSERVER_PATH' install"
  #     $start = "cmd.exe /C '$env:RABBITMQ_RABBITMQSERVER_PATH' start"

  #     write-host "Removing rabbitmq"
  #     Invoke-Expression -Command:$uninstall
  #     Start-Sleep 2

  #     write-host "Installing rabbitmq"
  #     Invoke-Expression -Command:$install
  #     Start-Sleep 2

  #     write-host "Starting rabbitmq"
  #     Invoke-Expression -Command:$start
  #     Start-Sleep 2

before_build:
  - cmd: dotnet restore src\Chinchilla.sln
  - ps: gitversion /l console /output buildserver

dotnet_csproj:
  patch: true
  file: 'src\**\*.csproj'
  version: $(GitVersion_NuGetVersion)
  package_version: $(GitVersion_NuGetVersion)
  assembly_version: $(GitVersion_MajorMinorPatch)
  file_version: $(GitVersion_MajorMinorPatch)
  informational_version: $(GitVersion_MajorMinorPatch)

build:
  parallel: true
  project: src\Chinchilla.sln
  publish_nuget: true

test_script:
  - ps: .\build\run-tests.ps1

deploy:
  provider: NuGet
  skip_symbols: true
  api_key:
    secure: Z1QcGBawSRfoLPWCtkhcZEMD4f+QLbw2o01T/BEuHL9hERKTSrVOutzAp8QCyDIf
  on:
    appveyor_repo_tag: true
